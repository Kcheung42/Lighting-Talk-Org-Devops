#+TITLE: Devops using ORG
#+AUTHOR: Kenneth Cheung and Gary W. Johnson, Ph.D.

#+PROPERTY: header-args+ :var FOOD                 = "RAMEN"
#+PROPERTY: header-args+ :var CUSTOMERS            = "DOG CAT BIRD"
#+PROPERTY: header-args+ :var REMOTE_SCRIPT_REPO   = "/tmp/Lighting-Talk-Org-Devops"
#+PROPERTY: header-args+ :var REMOTE_SCRIPT_BRANCH = "master"
#+PROPERTY: header-args+ :dir /ssh:gridfire@olympus:/tmp
#+PROPERTY: header-args+ :results output

* Introduction
* Why?

- Version controlled Enviornment
- Reproducable
- Documentation and code lives in the same place

* How?
** Verify vars are set

#+begin_src bash :tangle no
echo FOOD=$FOOD
#+end_src

#+RESULTS:
: FOOD=RAMEN

** Pass ORG variables to remote procces

#+begin_src bash :exports code :padline no :no-expand :results verbatim
sh $REMOTE_SCRIPT_REPO/remote-script.sh $FOOD
#+end_src

#+RESULTS:
: Launch remote script!
: Hello RAMEN

** Git Checkout & Pull Latest

#+begin_src bash
cd $REMOTE_SCRIPT_REPO
git fetch --all
git checkout $REMOTE_SCRIPT_BRANCH
git pull
COMMIT=$(git rev-parse HEAD)
echo "On branch $GRIDFIRE_SCRIPTS_BRANCH ($COMMIT)"
#+end_src

#+RESULTS:
: Fetching origin
: Your branch is up to date with 'origin/master'.
: Already up to date.
: On branch  (a08ab7b323cb6f86461683ce9cf53f1c270b58d7)

** Inject code blocks into another

#+begin_src bash :export code :tangle tangle/serve-ramen.sh :padline no :no-expand
#!/bin/bash

<<make-noodles>>

<<make-stock>>

<<assemble-ramen>>

for CUSTOMER in $CUSTOMERS; do
    make-noodles
    make-stock
    assemble-ramen $CUSTOMER
done
#+end_src

#+RESULTS:

*** make-noodles
#+name: make-noodles
#+begin_src bash
function make-noodles {
    echo "Mix flour and sodium bicarbonate together ..."
}
#+end_src

*** make-stock
#+name: make-stock
#+begin_src bash
function make-stock {
    echo "Add kombu and katsuboshi into a pot of chicken stock"
}
#+end_src

*** make-ramen
#+name: assemble-ramen
#+begin_src bash
function assemble-ramen {
    echo "Making ramen for $1"
}
#+end_src
